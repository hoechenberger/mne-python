{
  "name": "mne-dev",
  // More info on the Debian base image we're using here:
  // https://github.com/devcontainers/images/tree/main/src/base-debian
  // All features listed in the repository's devcontainer configuration are actually
  // built into the image.
  //
  // "image": "mcr.microsoft.com/devcontainers/base:debian-11",
  "build": { "dockerfile": "Dockerfile" }, // Only through the Dockerfile we can enforce ARM64
  "containerEnv": {
    "PYTHONNOUSERSITE": "true", // Make Python ignore the user's site-packages folder if it exists
    "XDG_RUNTIME_DIR": "/home/mne-user/.cache/xdgr" // For VNC
  },
  "features": {
    // See https://containers.dev/features
    // User & shell setup
    "ghcr.io/devcontainers/features/common-utils:2": {
      "username": "mne-user",
      "configureZshAsDefaultShell": true
    },
    // Git
    "ghcr.io/devcontainers/features/git:1": {
      "version": "os-provided",
      "ppa": "true"
    },
    // APT packages
    // We need those for 3D rendering.
    "ghcr.io/rocker-org/devcontainer-features/apt-packages:1": {
      "packages": "mesa-utils,libegl1,^libxcb.*-dev,libx11-xcb-dev,libglu1-mesa-dev,libxrender-dev,libxi-dev,libxkbcommon-dev,libxkbcommon-x11-dev"
    },
    // Conda and Mamba
    "ghcr.io/mamba-org/devcontainer-features/micromamba:1": {
      "channels": "conda-forge",
      "packages": "conda mamba ipython jupyterlab mne"
    },
    // Docker interface with host's Docker service
    "ghcr.io/devcontainers/features/docker-outside-of-docker:1": {},
    // Zsh plugins
    "ghcr.io/devcontainers-contrib/features/zsh-plugins:0": {
      "plugins": "git pip zsh-autosuggestions zsh-syntax-highlighting history-substring-search",
      "omzPlugins": "https://github.com/zsh-users/zsh-autosuggestions https://github.com/zsh-users/zsh-syntax-highlighting"
    },
    // Desktop and VNC access
    "ghcr.io/devcontainers/features/desktop-lite:1": {
      "password": "mne"
    }
  },
  // Configure tool-specific properties.
  "customizations": {
    // Configure properties specific to VS Code.
    "vscode": {
      "settings": {
        // Work around an issue when installing extensions on Apple Silicon chips
        // running an Intel Docker image, https://github.com/microsoft/vscode/issues/174632
        "extensions.verifySignature": false,
        // Editor settings
        "editor.formatOnSave": true,
        "editor.formatOnSaveMode": "modificationsIfAvailable",
        "editor.renderWhitespace": "trailing",
        // General Python settings
        "python.analysis.typeCheckingMode": "basic",
        "python.testing.pytestEnabled": true,
        "python.testing.pytestArgs": ["--color=yes"],
        "ruff.nativeServer": true,
        // "python.defaultInterpreterPath": "/opt/conda/bin/python",
        // Python modules and scripts
        "[python]": {
          "editor.defaultFormatter": "charliermarsh.ruff",
          "editor.codeActionsOnSave": {
            "source.fixAll": "explicit",
            "source.organizeImports": "explicit"
          }
        },
        // Jupyter notebooks
        "notebook.formatOnSave.enabled": true,
        "notebook.codeActionsOnSave": {
          "source.fixAll": "explicit",
          "source.organizeImports": "explicit"
        },
        // JavaScript
        "[javascript]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode"
        },
        "editor.rulers": [88],
        "debugpy.debugJustMyCode": false,
        // Screencast settings
        "screencastMode.keyboardOverlayTimeout": 5000,
        "screencastMode.mouseIndicatorSize": 50,
        // Disable telemetry and experiments
        "telemetry.telemetryLevel": "off",
        "gitlens.telemetry.enabled": false,
        "redhat.telemetry.enabled": false,
        "workbench.enableExperiments": false, // Should not be necessary if telemetry is off, but let's make it explicit.
        // Avoid accumulation of unused forwarded ports.
        "remote.restoreForwardedPorts": false
      },
      // Add the IDs of extensions you want installed when the container is created.
      "extensions": [
        // Python Development
        "ms-python.python",
        "ms-toolsai.jupyter",
        "charliermarsh.ruff",
        "samuelcolvin.jinjahtml",
        // MNE-Python snippets
        "hoechenberger.mne-python-extension",
        // JavaScript & TypeScript Development
        "dbaeumer.vscode-eslint",
        "esbenp.prettier-vscode",
        // Git
        "GitHub.vscode-pull-request-github",
        "eamodio.gitlens",
        // Docker
        "ms-azuretools.vscode-docker",
        // TOML
        "tamasfe.even-better-toml",
        // YAML
        "redhat.vscode-yaml",
        // Spell checking
        "streetsidesoftware.code-spell-checker",
        // Resource monitor
        "mutantdino.resourcemonitor",
        // Path / filename autocomplete
        "ionutvmi.path-autocomplete"
      ]
    }
  },
  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  "forwardPorts": [6080],
  "portsAttributes": {
    "6080": {
      "label": "Web VNC"
    }
  },
  // Use 'postCreateCommand' to run commands after the container is created.
  "postCreateCommand": {
    // Initialize shells to use conda and mamba
    "init-mamba-shell": "mamba init --quiet zsh bash",
    // Force pip to always install "globally": This will work in a virtual environment, but fail with the system Python, which is
    // precicely what we want: prevent users from accidentally cluttering their user site-packages folder
    "disable-pip-user-installs": "pip config set install.system true",
    // Install MNE in editabe mode, and set up pre-commit hooks
    "install-mne-editable": "pip install -e '.[full,dev,test_extra]' && pre-commit install",
    // Create XDG_RUNTIME_DIR
    "create-xdg-runtime-dir": "mkdir -p -m 0700 $XDG_RUNTIME_DIR"
  },
  // Set `remoteUser` to `root` to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
  "remoteUser": "mne-user",
  "initializeCommand": {
    // These commands are run on the host.
    //
    // We will mount the mne_data directory from the host inside the container to avoid having
    // to dowload testing and sample data on container (re)creation.
    // Note: On Windows, the .ps1 suffix will be appended automatically to the script name.
    "create-mne-data-dir": ".devcontainer/scripts/create-data-dir"
  },
  "postStartCommand": {
    // These commands are run inside the container.
    //
    // Do all git-config-related things here, otherwise we may run into problems; see:
    // https://github.com/microsoft/vscode-remote-release/issues/6810
    "configure-git": "${containerWorkspaceFolder}/.devcontainer/scripts/configure-git.sh"
  }
}
